apiVersion: eventstreams.ibm.com/v1beta1
kind: EventStreams
metadata:
  name: prod
  namespace: cp4i-eventstreams
spec:
  version: 10.5.0
  license:
    accept: true
    use: CloudPakForIntegrationProduction
  adminApi: {}
  adminUI: {}
  apicurioRegistry: {}
  collector: {}
  restProducer: {}
  cruise-control: {}
  strimziOverrides:
    kafka:
      replicas: 5
      authorization:
        type: runas
      config:
        inter.broker.protocol.version: '2.8'
        interceptor.class.names: com.ibm.eventstreams.interceptors.metrics.ProducerMetricsInterceptor
        log.cleaner.threads: 6
        log.message.format.version: '2.8'
        num.io.threads: 24
        num.network.threads: 9
        num.replica.fetchers: 3
        default.replication.factor: 3
        min.insync.replicas: 2
        offsets.topic.replication.factor: 3
      listeners:
        external:
          type: route
          authentication:
            type: scram-sha-512
          tls: true
        tls:
          port: 9093
          type: internal
          tls: true
          authentication:
            type: tls
      logging: 
        type: inline
        loggers:
          kafka.root.logger.level: "INFO"
      readinessProbe:
        initialDelaySeconds: 15
        timeoutSeconds: 5
      livenessProbe:
        initialDelaySeconds: 15
        timeoutSeconds: 5
      metrics: {}
      storage:
        type: persistent-claim
        size: 10Gi
        class: 'ibmc-bock-gold'
      rack:
        topologyKey: topology.kubernetes.io/zone
      resources:
        requests:
          memory: 8096Mi
          cpu: 4000m
        limits:
          memory: 8096Mi
          cpu: 4000m
    zookeeper:
      replicas: 3
      metrics: {}
      storage:
        type: persistent-claim
        size: 4Gi
        class: 'ibmc-bock-gold'
  requestIbmServices:
    iam: true
    monitoring: true
